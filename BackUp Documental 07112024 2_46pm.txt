
Estructura del Proyecto

>PROYECTO				
	>pedidos			
		>_pycache_		
		>migrations		
		_init_.py		
		admin.py		
		apps.py		
		forms.py		
		models.py		
		tests.py		
		urls.py		
		views.py		
		>templates		
			cargar_portada.html	
			crear_cliente.html	
			crear_empresa.html	
			crear_pedido.html	
			crear_producto.html	
			crear_user_sist.html	
			enviar_mensajes.html	
			inicio.html	
			productos.html	
			ubicacion_clientes.html	
			ver_clientes.html	
			ver_empresas.html	
			ver_pedidos.html	
			ver_productos.html	
			ver_usuarios.html	
	>sistema_pedidos			
		>_pycache_		
		_init_.py		
		asgi.py		
		settings.py		
		urls.py		
		wsgi.py		
	>static			
		>catalogo		
			1.png	
			2.png	
			3.png	
			4.png	
		>images		
			1.png	
			2.png	
			3.png	
			4.png	
		>images		
			portada1.png	
	>venv			
	db.sqlite3			
	manage.py			



>PROYECTO				
	>pedidos			
		>templates		
			ver_usuarios.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Usuarios del Sistema</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        .user-list {
            width: 100%;
            max-width: 600px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 20px;
            padding: 10px;
        }

        .user-list ul {
            list-style-type: none;
            padding: 0;
        }

        .user-list li {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .user-list li:last-child {
            border-bottom: none;
        }

        .user-list li:nth-child(even) {
            background-color: #f9f9f9;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 600px;
        }

        .actions a {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
            margin: 5px;
        }

        .actions a:hover {
            color: #0056b3;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Enlace para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Usuarios del Sistema</h1>

    <div class="user-list">
        <ul>
            {% for usuario in usuarios %}
                <li>{{ usuario.nombre }} - {{ usuario.usuario }}</li>
            {% empty %}
                <li>No hay usuarios registrados.</li>
            {% endfor %}
        </ul>
    </div>

    <div class="actions">
        <a href="{% url 'crear_usuario' %}">Crear Usuario</a>
    </div>
</body>
</html>	


>PROYECTO				
	>pedidos			
		>templates		
			ver_productos.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Productos</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            max-width: 800px;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 20px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 800px;
        }

        .actions button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            border-radius: 5px;
            font-weight: bold;
            font-size: 1rem;
            transition: background-color 0.3s ease;
        }

        .actions button:hover {
            background-color: #c0392b;
        }

        .actions a {
            text-decoration: none;
            font-weight: bold;
            padding: 10px 15px;
            border-radius: 5px;
            background-color: #4CAF50;
            color: white;
        }

        .actions a:hover {
            background-color: #45a049;
            color: white;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Enlace para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Productos</h1>

    <form method="post" action="{% url 'eliminar_producto' %}">
        {% csrf_token %}
        <table>
            <tr>
                <th>Seleccionar</th>
                <th>Item Producto</th>
                <th>Nombre</th>
                <th>Marca</th>
                <th>Descripci√≥n</th>
                <th>Valor Unitario</th>
                <th>Fecha de Vencimiento</th>
            </tr>
            {% for producto in productos %}
            <tr>
                <td><input type="checkbox" name="eliminar[]" value="{{ producto.id }}"></td>
                <td>{{ producto.item_producto }}</td>
                <td>{{ producto.nombre }}</td>
                <td>{{ producto.marca }}</td>
                <td>{{ producto.descripcion }}</td>
                <td>${{ producto.valor_unitario }}</td>
                <td>{{ producto.fecha_vencimiento|date:"d/m/Y" }}</td>
            </tr>
            {% empty %}
            <tr>
                <td colspan="7">No hay productos registrados.</td>
            </tr>
            {% endfor %}
        </table>

        <div class="actions">
            <button type="submit">Eliminar Productos Seleccionados</button>
            <a href="{% url 'crear_producto' %}">Crear Producto</a>
        </div>
    </form>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			ver_pedidos.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Ver Pedidos</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        table {
            width: 100%;
            max-width: 800px;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 20px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
            font-weight: bold;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            width: 100%;
            max-width: 800px;
        }

        .actions a {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
            margin: 5px;
        }

        .actions a:hover {
            color: #0056b3;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Enlace para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Pedidos</h1>

    <table>
        <tr>
            <th>Pedido ID</th>
            <th>Cliente</th>
            <th>Producto</th>
            <th>Compa√±√≠a</th>
            <th>Estatus del Pedido</th>
        </tr>
        {% for pedido in pedidos %}
        <tr>
            <td>{{ pedido.id }}</td>
            <td>{{ pedido.cliente.nombre }} {{ pedido.cliente.apellido }}</td>
            <td>{{ pedido.producto.nombre }}</td>
            <td>{{ pedido.empresa.item_empresa }}</td>
            <td>{{ pedido.EstatusPed }}</td>
        </tr>
        {% empty %}
        <tr>
            <td colspan="4">No hay pedidos registrados.</td>
        </tr>
        {% endfor %}
    </table>

    <div class="actions">
        <a href="{% url 'crear_pedido' %}">Crear Pedido</a>
        <a href="{% url 'ver_productos' %}">Ver Productos</a>
    </div>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			ver_empresas.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Empresas</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        .company-list {
            width: 100%;
            max-width: 600px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .company-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .company-item:last-child {
            border-bottom: none;
        }

        .delete-button {
            background-color: #FF5733;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }

        .delete-button:hover {
            background-color: #E74C3C;
        }
    </style>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Empresas</h1>

    <form method="post" action="{% url 'eliminar_empresas' %}">
        {% csrf_token %}
        <div class="company-list">
            {% for empresa in empresas %}
                <div class="company-item">
                    <span>
                        <strong>{{ empresa.nombre }}</strong> - {{ empresa.direccion }} - {{ empresa.telefono }} - Item: {{ empresa.item_empresa }}
                    </span>
                    <input type="checkbox" name="empresas_a_eliminar" value="{{ empresa.id }}">
                </div>
            {% empty %}
                <div class="company-item">No hay empresas registradas.</div>
            {% endfor %}
        </div>
        <button type="submit" class="delete-button">Eliminar Empresas Seleccionadas</button>
    </form>

    <a href="{% url 'crear_empresa' %}" class="back-to-home">üè¢ Crear Empresa</a>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			ver_clientes.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Clientes</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        .client-list {
            width: 100%;
            max-width: 600px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        .client-item {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        .client-item:last-child {
            border-bottom: none;
        }

        .client-item strong {
            font-weight: bold;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .actions a {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
        }

        .actions a:hover {
            color: #0056b3;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Clientes</h1>

    <div class="client-list">
        {% for cliente in clientes %}
            <div class="client-item">
                <strong>{{ cliente.nombre }} {{ cliente.apellido }}</strong> - {{ cliente.telefono }}
            </div>
        {% empty %}
            <div class="client-item">No hay clientes registrados.</div>
        {% endfor %}
    </div>

    <div class="actions">
        <a href="{% url 'crear_cliente' %}">Crear Cliente</a>
    </div>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			ubicacion_clientes.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Ubicaci√≥n Pedidos</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
        }

        #map {
            width: 100%;
            max-width: 800px;
            height: 500px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?key={{ google_maps_api_key }}"></script>
    <script>
        function initMap() {
            var centro = { lat: 4.686997, lng: -74.056924 };  // Bogot√°, Colombia

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 11,
                center: centro
            });

            var clientes = JSON.parse('{{ clientes_json|escapejs }}');

            clientes.forEach(function(cliente) {
                var coords = cliente.coordenadas.split(',');
                var latitud = parseFloat(coords[0].trim());
                var longitud = parseFloat(coords[1].trim());

                // Definir el √≠cono del marcador seg√∫n el estatus del pedido
                var iconUrl;
                switch (cliente.estatus_pedido) {
                    case 'Solicitado':
                        iconUrl = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';
                        break;
                    case 'Confirmado':
                        iconUrl = 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png';
                        break;
                    case 'Entregado':
                        iconUrl = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
                        break;
                    default:
                        iconUrl = 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png';
                }

                var marker = new google.maps.Marker({
                    position: { lat: latitud, lng: longitud },
                    map: map,
                    title: cliente.nombre,
                    icon: iconUrl
                });

                var infoWindow = new google.maps.InfoWindow({
                    content: `<div>
                                <strong>${cliente.nombre}</strong><br>
                                Pedido: ${cliente.pedido_info}<br>
                                Estatus: ${cliente.estatus_pedido}<br>
                                <a href="https://www.google.com/maps/dir/?api=1&destination=${latitud},${longitud}" target="_blank">
                                    Ver ruta en Google Maps
                                </a>
                              </div>`
                });

                marker.addListener('click', function() {
                    infoWindow.open(map, marker);
                });
            });
        }
    </script>
</head>
<body onload="initMap()">
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>
    
    <h1>Ubicaci√≥n Pedidos</h1>
    <div id="map"></div>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			productos.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Cat√°logo de Productos</title>
    {% load static %}
    <style>
        /* Estilos generales para el cuerpo */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }

        /* Estilo para el enlace de regreso */
        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        /* Contenedor para las im√°genes del cat√°logo */
        .catalog-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 800px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        /* Estilo para las im√°genes del producto */
        .producto {
            display: block;
            width: 100%; /* Asegura que las im√°genes ocupen todo el ancho del contenedor */
            max-width: 600px; /* Ancho m√°ximo para computadoras de escritorio */
            height: auto; /* Mantiene la proporci√≥n de las im√°genes */
            margin: 10px 0; /* Espacio entre las im√°genes */
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Ajuste para dispositivos m√≥viles */
        @media (max-width: 768px) {
            .producto {
                max-width: 100%; /* Se ajusta al ancho completo del contenedor en pantallas peque√±as */
            }
        }
    </style>
</head>
<body>
    <!-- Enlace de regreso al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <!-- T√≠tulo del cat√°logo -->
    <h1>Cat√°logo de Productos</h1>

    <!-- Contenedor para las im√°genes de productos -->
    <div class="catalog-container">
        <img src="{% static 'catalogo/1.png' %}" alt="Producto 1" class="producto">
        <img src="{% static 'catalogo/2.png' %}" alt="Producto 2" class="producto">
        <img src="{% static 'catalogo/3.png' %}" alt="Producto 3" class="producto">
        <img src="{% static 'catalogo/4.png' %}" alt="Producto 4" class="producto">
    </div>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			login.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Iniciar Sesi√≥n</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            height: 100vh;
            margin: 0;
            background-color: #e6f7ff; /* Color de fondo opcional */
        }
        .btn {
            display: block;
            width: 150px;
            margin: 20px auto;
            padding: 10px;
            background-color: #0066cc;
            color: white;
            text-align: center;
            text-decoration: none;
            border-radius: 5px;
            font-size: 16px;
        }
        .btn:hover {
            background-color: #0052a3;
        }
        .login-container {
            width: 300px;
            padding: 20px;
            background-color: #f1f1f1;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        input {
            width: 100%;
            margin-bottom: 10px;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }
        button {
            width: 100%;
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <!-- Contenedor de inicio de sesi√≥n -->
    <div class="login-container">
        <h2>Iniciar Sesi√≥n</h2>
        <form method="post">
            {% csrf_token %}
            <label for="username">Usuario:</label>
            <input type="text" name="username" required>
            <label for="password">Contrase√±a:</label>
            <input type="password" name="password" required>
            <button type="submit">Iniciar Sesi√≥n</button>
        </form>
    </div>

    <!-- Bot√≥n de Productos -->
    <a href="{% url 'productos' %}" class="btn">Ver Productos</a>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			inicio.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>P√°gina de Inicio</title>
    {% load static %}
    <meta name="viewport" content="width=device-width, initial-scale=1.0"> <!-- Hacerlo responsivo -->
    <style>
        body {
            background-image: url("{% static 'portadas/portada1.png' %}");
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            background-attachment: fixed;
            font-family: Arial, sans-serif;
            color: #fff;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: flex-end;
            align-items: flex-start;
            height: 100vh;
        }

        .menu-container {
            background-color: rgba(0, 0, 0, 0.6);
            padding: 15px;
            border-radius: 8px;
            text-align: right;
            width: 80%;
            max-width: 220px; /* Ancho m√°ximo reducido */
            margin: 15px;
        }

        h1 {
            color: #ffd700;
            font-size: 1.5em;
            margin: 0 0 10px;
        }

        h2 {
            color: #ffffff;
            margin: 15px 0 10px;
            font-size: 1.2em;
        }

        .menu {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .menu li {
            margin-bottom: 6px;
        }

        .menu a {
            text-decoration: none;
            color: white;
            background-color: #0066cc;
            padding: 6px 3px;  /* Ajusta el padding vertical para mantener el largo */
            border-radius: 5px;
            display: block;
            font-size: 0.9em;
            transition: background-color 0.3s;
            font-weight: bold;
            text-align: center;
            width: 80%;  /* Mantiene el ancho m√°ximo del contenedor */
        }

        .menu a:hover {
            background-color: #0055a3;
        }

        .logout {
            color: #ffd700;
            margin-top: 15px;
            font-size: 1em;
            display: inline-block;
            text-align: center;
        }

        .logout:hover {
            color: #ffcc33;
            text-decoration: underline;
        }

        /* Estilos para dispositivos m√≥viles */
        @media (max-width: 600px) {
            .menu-container {
                width: 100%;
                max-width: 100%;
                border-radius: 0;
                margin: 0;
                padding: 15px;
            }

            h1, h2 {
                font-size: 1.3em;
            }

            .menu a {
                font-size: 1em;
                padding: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="menu-container">
        <h1>Bienvenid@s</h1>
        <p>Has iniciado sesi√≥n correctamente.</p>

        <!-- Opciones del men√∫ -->
        <h2>Opciones</h2>
        <ul class="menu">
            <li><a href="{% url 'crear_cliente' %}">Crear Cliente</a></li>
            <li><a href="{% url 'crear_empresa' %}">Crear Empresa</a></li>
            <li><a href="{% url 'crear_pedido' %}">Crear Pedido</a></li>
            <li><a href="{% url 'crear_producto' %}">Crear Producto</a></li>
            <li><a href="{% url 'crear_usuario' %}">Crear Usuario</a></li>
            <li><a href="{% url 'enviar_mensajes' %}">Enviar MSN WhatsApp</a></li>
            <li><a href="{% url 'ubicacion_clientes' %}">Ver Ubicaci√≥n Pedidos</a></li>
            <li><a href="{% url 'ver_clientes' %}">Ver Clientes</a></li>
            <li><a href="{% url 'ver_empresas' %}">Ver Empresas</a></li>
            <li><a href="{% url 'ver_pedidos' %}">Ver Pedidos</a></li>
            <li><a href="{% url 'ver_productos' %}">Ver Productos</a></li>
            <li><a href="{% url 'ver_usuarios' %}">Ver Usuarios</a></li>
        </ul>

        <a href="{% url 'logout' %}" class="logout">Cerrar Sesi√≥n</a>
    </div>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			enviar_mensajes.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Enviar Mensajes por WhatsApp</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1, h2 {
            color: #333;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form textarea,
        form input[type="checkbox"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        form textarea {
            resize: vertical;
            min-height: 80px;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: block;
            width: 100%;
        }

        form button:hover {
            background-color: #45a049;
        }

        .client-list {
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 4px;
            margin-bottom: 15px;
        }

        .enlaces-list ul {
            padding: 0;
            list-style-type: none;
        }

        .enlaces-list li {
            margin-bottom: 10px;
        }

        .enlaces-list a {
            color: #007bff;
            text-decoration: none;
        }

        .enlaces-list button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 10px;
        }

        .enlaces-list button:hover {
            background-color: #0056b3;
        }
    </style>
    <script>
        function toggleSelectAll(checkbox) {
            const checkboxes = document.querySelectorAll('input[name="clientes"]');
            checkboxes.forEach((clienteCheckbox) => {
                clienteCheckbox.checked = checkbox.checked;
            });
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                alert("Enlace copiado al portapapeles");
            });
        }
    </script>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Enviar Mensajes por WhatsApp</h1>
    <div class="form-container">
        <form method="post" action="{% url 'enviar_mensajes' %}">
            {% csrf_token %}
            
            <!-- Campo de mensaje -->
            <label for="mensaje">Mensaje:</label>
            <textarea name="mensaje" id="mensaje" rows="4" placeholder="Escribe el mensaje aqu√≠" required></textarea>
            
            <!-- Casilla para seleccionar/deseleccionar todos -->
            <label>
                <input type="checkbox" onclick="toggleSelectAll(this)">
                Seleccionar Todos
            </label>

            <!-- Lista de selecci√≥n de clientes -->
            <div class="client-list">
                <label for="clientes">Seleccionar Clientes:</label>
                {% for cliente in clientes %}
                    <div>
                        <input type="checkbox" name="clientes" value="{{ cliente.id }}">
                        {{ cliente.nombre }} {{ cliente.apellido }} - {{ cliente.whatsapp }}
                    </div>
                {% endfor %}
            </div>

            <button type="submit">Generar Enlaces de Mensaje</button>
        </form>
    </div>

    <!-- Mostrar los enlaces generados despu√©s de enviar el formulario -->
    {% if enlaces %}
        <div class="enlaces-list">
            <h2>Enlaces para Enviar Mensajes:</h2>
            <ul>
                {% for enlace in enlaces %}
                    <li>
                        <a href="{{ enlace }}" target="_blank">{{ enlace }}</a>
                        <button onclick="copyToClipboard('{{ enlace }}')">Copiar</button>
                    </li>
                {% endfor %}
            </ul>
        </div>
    {% endif %}
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			crear_user_sist.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Crear Usuario del Sistema</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form input[type="text"],
        form input[type="email"],
        form input[type="password"],
        form input[type="number"],
        form input[type="date"],
        form textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: block;
            width: 100%;
        }

        form button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Crear Usuario del Sistema</h1>
    
    <div class="form-container">
        <form method="post">
            {% csrf_token %}
            {{ form.as_p }}
            <button type="submit">Guardar Usuario</button>
        </form>
    </div>

    <a href="{% url 'ver_usuarios' %}" class="back-to-home">üë§ Ver Usuarios</a>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			crear_producto.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Crear Producto</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form input[type="text"],
        form input[type="number"],
        form input[type="date"],
        form select,
        form textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: block;
            width: 100%;
        }

        form button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Crear Producto</h1>
    
    <div class="form-container">
        <form method="post">
            {% csrf_token %}

            <label for="nombre">Nombre:</label>
            <input type="text" name="nombre" id="nombre" required>

            <label for="marca">Marca:</label>
            <input type="text" name="marca" id="marca" required>

            <label for="descripcion">Descripci√≥n:</label>
            <textarea name="descripcion" id="descripcion"></textarea>

            <label for="item_empresa">Item Empresa:</label>
            <select name="item_empresa" id="item_empresa" required>
                {% for empresa in empresas %}
                    <option value="{{ empresa.id }}">{{ empresa.nombre }} - {{ empresa.item_empresa }}</option>
                {% endfor %}
            </select>

            <label for="valor_unitario">Valor unitario:</label>
            <input type="number" name="valor_unitario" id="valor_unitario" required>

            <label for="fecha_vencimiento">Fecha de Vencimiento:</label>
            <input type="date" name="fecha_vencimiento" id="fecha_vencimiento" required>

            <label for="item_producto">Item Producto:</label>
            <input type="number" name="item_producto" id="item_producto" required>

            <label for="UM">Unidad de Medida (UM):</label>
            <input type="text" name="UM" id="UM" maxlength="15" required>

            <button type="submit">Guardar Producto</button>
        </form>
    </div>

    <a href="{% url 'ver_productos' %}" class="back-to-home">üì¶ Ver Productos</a>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			crear_pedido.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Crear Pedido</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        h1, h2, h3 {
            color: #333;
        }

        form {
            background-color: #fff;
            border-radius: 5px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form input[type="text"],
        form input[type="number"],
        form select {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        table {
            width: 100%;
            max-width: 1000px;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
            font-weight: bold;
        }

        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: inline-block;
            margin-top: 10px;
        }

        button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Bot√≥n de regreso a la p√°gina de inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Crear Pedido</h1>
    <form method="post">
        {% csrf_token %}
        <label for="cliente">Cliente:</label>
        <select name="cliente" id="cliente" required>
            {% for cliente in clientes %}
                <option value="{{ cliente.id }}">{{ cliente.nombre }} {{ cliente.apellido }}</option>
            {% endfor %}
        </select>
        
        <label for="producto">Producto:</label>
        <select name="producto" id="producto" required>
            {% for producto in productos %}
                <option value="{{ producto.id }}">{{ producto.nombre }}</option>
            {% endfor %}
        </select>

        <label for="EstatusPed">Estatus del Pedido:</label>
        <select name="EstatusPed" id="EstatusPed" required>
            <option value="Solicitado">Solicitado</option>
            <option value="Confirmado">Confirmado</option>
            <option value="Entregado">Entregado</option>
        </select>
        
        <label for="cantidad">Cantidad:</label>
        <input type="number" name="cantidad" id="cantidad" value="1" min="1" required>

        <button type="submit" name="agregar_producto">Agregar Producto</button>
        <button type="submit" name="guardar_pedido">Guardar Pedido</button>
    </form>

    <h2>Productos Solicitados</h2>
    <form method="post">
        {% csrf_token %}
        <table>
            <tr>
                <th>Fecha del Pedido</th>
                <th>Nro Pedido</th>
                <th>Item Producto</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Nombre del Producto</th>
                <th>Valor Unitario</th>
                <th>Cantidad</th>
                <th>Val Producto</th>
                <th>Estatus del Pedido</th>
                <th>Acciones</th>
            </tr>
            {% for producto in productos_solicitados %}
            <tr>
                <td>{{ producto.fecha_pedido }}</td>
                <td>{{ producto.nro_pedido }}</td>
                <td>{{ producto.item_producto }}</td>
                <td>{{ cliente_seleccionado.nombre }}</td>
                <td>{{ cliente_seleccionado.apellido }}</td>
                <td>{{ producto.nombre }}</td>
                <td>{{ producto.valor_unitario }}</td>
                <td>{{ producto.cantidad }}</td>
                <td>{{ producto.val_producto }}</td>
                <td>{{ producto.EstatusPed }}</td>
                <td>
                    <input type="checkbox" name="eliminar_fila" value="{{ forloop.counter0 }}">
                </td>
            </tr>
            {% endfor %}
        </table>
        <button type="submit" name="eliminar_productos_seleccionados">Eliminar Productos Seleccionados</button>
    </form>

    <h3>Total Pedido: {{ total_pedido }}</h3>

    <form method="post">
        {% csrf_token %}
        <button type="submit" name="limpiar_productos">Limpiar Productos Solicitados</button>
    </form>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			crear_empresa.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Crear Empresa</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form input[type="text"],
        form input[type="number"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: block;
            width: 100%;
        }

        form button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Crear Empresa</h1>
    
    <div class="form-container">
        <form method="post">
            {% csrf_token %}
            <label for="nombre">Nombre:</label>
            <input type="text" name="nombre" id="nombre" required>

            <label for="direccion">Direcci√≥n:</label>
            <input type="text" name="direccion" id="direccion" required>

            <label for="telefono">Tel√©fono:</label>
            <input type="text" name="telefono" id="telefono" required>

            <label for="item_empresa">Item Empresa:</label>
            <input type="number" name="item_empresa" id="item_empresa" required maxlength="10">

            <button type="submit">Guardar Empresa</button>
        </form>
    </div>

    <a href="{% url 'ver_empresas' %}" class="back-to-home">üè¢ Ver Empresas</a>
</body>
</html>


>PROYECTO				
	>pedidos			
		>templates		
			crear_cliente.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Crear Cliente</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h1 {
            color: #333;
        }

        .back-to-home {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            font-size: 1.2rem;
            color: #4CAF50;
            text-decoration: none;
            font-weight: bold;
        }

        .back-to-home:hover {
            color: #45a049;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        form label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        form input[type="text"],
        form input[type="email"],
        form input[type="number"],
        form input[type="date"],
        form textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        form button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 15px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
            display: block;
            width: 100%;
        }

        form button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <!-- Icono para regresar al inicio -->
    <a href="{% url 'inicio' %}" class="back-to-home">üè† Volver al Inicio</a>

    <h1>Crear Cliente</h1>
    
    <div class="form-container">
        <form method="post">
            {% csrf_token %}
            {{ form.as_p }}
            <button type="submit">Guardar Cliente</button>
        </form>
    </div>

    <a href="{% url 'ver_clientes' %}" class="back-to-home">üë§ Ver Clientes</a>
</body>
</html>

>PROYECTO				
	>pedidos			
		>templates		
			cargar_portada.html
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>P√°gina de Inicio</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            background-attachment: fixed;
            {% if portada %}
            background-image: url('{{ portada.imagen.url }}');
            {% else %}
            background-color: #f0f0f0; /* Color de fondo si no hay imagen */
            {% endif %}
        }
        .content {
            background-color: rgba(255, 255, 255, 0.8); /* Fondo semitransparente para texto */
            padding: 20px;
            margin: 20px;
            border-radius: 8px;
        }
        h1, p {
            text-align: center;
        }
        ul {
            list-style-type: none;
            padding: 0;
            text-align: center;
        }
        li {
            margin-bottom: 10px;
        }
        a {
            text-decoration: none;
            color: #0066cc;
            font-weight: bold;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="content">
        <h1>Bienvenido a la Plataforma</h1>
        <p>Has iniciado sesi√≥n correctamente.</p>

        <h2>Opciones</h2>
        <ul>
            <li><a href="{% url 'crear_cliente' %}">Crear Cliente</a></li>
            <li><a href="{% url 'crear_empresa' %}">Crear Empresa</a></li>
            <li><a href="{% url 'crear_pedido' %}">Crear Pedido</a></li>
            <li><a href="{% url 'crear_producto' %}">Crear Producto</a></li>
            <li><a href="{% url 'crear_usuario' %}">Crear Usuario</a></li>
            <li><a href="{% url 'cargar_portada' %}">Cargar Portada</a></li>
            <li><a href="{% url 'ver_clientes' %}">Ver Clientes</a></li>
            <li><a href="{% url 'ver_empresas' %}">Ver Empresas</a></li>
            <li><a href="{% url 'ver_pedidos' %}">Ver Pedidos</a></li>
            <li><a href="{% url 'ver_productos' %}">Ver Productos</a></li>
            <li><a href="{% url 'ver_usuarios' %}">Ver Usuarios</a></li>
        </ul>

        <a href="{% url 'logout' %}">Cerrar Sesi√≥n</a>
    </div>
</body>
</html>

>PROYECTO				
	>pedidos			
		admin.py
from django.contrib import admin
from .models import UserSistem, Empresa, Cliente, Producto, Pedido

admin.site.register(UserSistem)
admin.site.register(Empresa)
admin.site.register(Cliente)
admin.site.register(Producto)
admin.site.register(Pedido)

>PROYECTO				
	>pedidos			
		apps.py
from django.apps import AppConfig


class PedidosConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'pedidos'

>PROYECTO				
	>pedidos			
		forms.py
from django import forms
from .models import Empresa, UserSistem, Cliente, Producto, Pedido, Portada

class EmpresaForm(forms.ModelForm):
    class Meta:
        model = Empresa
        fields = '__all__'

class UserSistemForm(forms.ModelForm):
    class Meta:
        model = UserSistem
        fields = '__all__'

class ClienteForm(forms.ModelForm):
    class Meta:
        model = Cliente
        fields = '__all__'

class ProductoForm(forms.ModelForm):
    class Meta:
        model = Producto
        fields = '__all__'

class PedidoForm(forms.ModelForm):
    class Meta:
        model = Pedido
        fields = '__all__'

# Clase PortadaForm para cargar portadas
class PortadaForm(forms.ModelForm):
    class Meta:
        model = Portada
        fields = ['imagen', 'descripcion']  # Ajusta los campos seg√∫n tu modelo

>PROYECTO				
	>pedidos			
		models.py
from django.core.exceptions import ValidationError 
from django.db import models
from django.utils import timezone
from django.contrib.auth.models import User

class Portada(models.Model):
    imagen = models.ImageField(upload_to='portadas/')
    descripcion = models.CharField(max_length=200, blank=True, null=True)

    def __str__(self):
        return f"Portada {self.id}"

class Empresa(models.Model):
    item_empresa = models.CharField(max_length=10, unique=True)  # Nuevo campo con un m√°ximo de 10 caracteres
    nombre = models.CharField(max_length=100)
    direccion = models.CharField(max_length=255, default="Direcci√≥n no especificada")
    telefono = models.CharField(max_length=15, default="Sin tel√©fono")
    # Agrega otros campos necesarios

    def __str__(self):
        return self.nombre

class UserSistem(models.Model):
    # Define los campos para el modelo UserSistem
    nombre = models.CharField(max_length=100)
    # Agrega otros campos necesarios

    def __str__(self):
        return self.nombre

class Cliente(models.Model):
    nombre = models.CharField(max_length=100)
    apellido = models.CharField(max_length=100)
    documento = models.CharField(max_length=20, unique=True)
    direccion = models.CharField(max_length=200)
    coordenadas = models.CharField(max_length=50)  # Para almacenar latitud y longitud
    telefono = models.CharField(max_length=20)
    whatsapp = models.CharField(max_length=20)
    zona = models.CharField(max_length=50)
    metodo_pago = models.CharField(max_length=50)

    def __str__(self):
        return f"{self.nombre} {self.apellido}"

class Producto(models.Model):
    empresa = models.ForeignKey(Empresa, on_delete=models.CASCADE, default=1)
    nombre = models.CharField(max_length=100)
    marca = models.CharField(max_length=50)
    descripcion = models.TextField()
    UM = models.CharField(max_length=15, default='UND')  # Permitir valores personalizados
    valor_unitario = models.DecimalField(max_digits=10, decimal_places=2)
    fecha_vencimiento = models.DateField()
    item_producto = models.IntegerField(unique=True, default=1)
    
    def clean(self):
        # Verificar si `item_producto` ya existe
        if Producto.objects.filter(item_producto=self.item_producto).exclude(pk=self.pk).exists():
            raise ValidationError({'item_producto': 'El valor de Item Producto ya existe. Por favor, elige un valor diferente.'})

    def save(self, *args, **kwargs):
        # Llamar a `clean` para validar antes de guardar
        self.full_clean()  # Ejecuta todas las validaciones, incluida `clean`
        super().save(*args, **kwargs)

    def __str__(self):
        return f"{self.nombre} - Item: {self.item_producto}"

class Pedido(models.Model):
    nro_pedido = models.IntegerField(default=1)  # Campo para el n√∫mero de pedido
    item_pedido = models.IntegerField(default=1)  # Campo para el n√∫mero de √≠tem
    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)
    producto = models.ForeignKey(Producto, on_delete=models.CASCADE)
    item_empresa = models.CharField(max_length=10, null=True, blank=True, default=1)
    EstatusPed = models.CharField(max_length=20, choices=[
        ('Solicitado', 'Solicitado'),
        ('Confirmado', 'Confirmado'),
        ('Entregado', 'Entregado')
    ])
    cantidad = models.IntegerField(default=1)
    fecha_pedido = models.DateField(default=timezone.now)
    
    class Meta:
        unique_together = ('nro_pedido', 'item_pedido')  # Restringe la unicidad combinada

    def save(self, *args, **kwargs):
        if not self.nro_pedido:
            last_pedido = Pedido.objects.order_by('-nro_pedido').first()
            self.nro_pedido = last_pedido.nro_pedido + 1 if last_pedido else 1

        if not self.item_pedido:
            # Generar un nuevo `item_pedido` basado en el n√∫mero de √≠tems en el pedido actual
            max_item = Pedido.objects.filter(nro_pedido=self.nro_pedido).count()
            self.item_pedido = max_item + 1

        super(Pedido, self).save(*args, **kwargs)

    def __str__(self):
        return f"Pedido {self.id} - Cliente: {self.cliente.nombre} {self.cliente.apellido} - Producto: {self.producto.nombre}"

    @property
    def val_producto(self):
        return self.producto.valor_unitario * self.cantidad

>PROYECTO				
	>pedidos			
		tests.py
from django.test import TestCase
# Create your tests here.

urls.py
from django.urls import path
from . import views

urlpatterns = [
    # Ruta de inicio y autenticaci√≥n
    path('', views.login_view, name='login'),  # P√°gina de inicio como login
    path('inicio/', views.inicio, name='inicio'),
    path('logout/', views.logout_view, name='logout'),
    path('cargar_portada/', views.cargar_portada, name='cargar_portada'),

    # Rutas de Empresa
    path('crear_empresa/', views.crear_empresa, name='crear_empresa'),
    path('ver_empresas/', views.ver_empresas, name='ver_empresas'),
    path('eliminar_empresas/', views.eliminar_empresas, name='eliminar_empresas'),

    # Rutas de Usuario y Cliente
    path('crear_usuario/', views.crear_user_sist, name='crear_usuario'),
    path('ver_usuarios/', views.ver_usuarios, name='ver_usuarios'),
    path('crear_cliente/', views.crear_cliente, name='crear_cliente'),
    path('ver_clientes/', views.ver_clientes, name='ver_clientes'),

    # Rutas de Producto
    path('crear_producto/', views.crear_producto, name='crear_producto'),
    path('ver_productos/', views.ver_productos, name='ver_productos'),
    path('eliminar_producto/', views.eliminar_producto, name='eliminar_producto'),

    # Rutas de Pedido
    path('crear_pedido/', views.crear_pedido, name='crear_pedido'),
    path('ver_pedidos/', views.ver_pedidos, name='ver_pedidos'),
    
    # Rutas de Mensajes y Ubicaci√≥n
    path('enviar_mensajes/', views.enviar_mensajes, name='enviar_mensajes'),
    path('ubicacion_clientes/', views.ubicacion_clientes, name='ubicacion_clientes'),
]

>PROYECTO				
	>pedidos			
		views.py
from django.conf import settings
from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from .forms import EmpresaForm, UserSistemForm, ClienteForm, ProductoForm, PedidoForm, PortadaForm
from .models import Empresa, UserSistem, Cliente, Producto, Pedido, Portada
from django.core.exceptions import ValidationError
import json
from datetime import datetime
from django.utils import timezone

# Vista para la p√°gina de inicio
@login_required
def inicio(request):
    portada = Portada.objects.last()  # Obtener la √∫ltima portada cargada
    return render(request, 'pedidos/inicio.html', {'portada': portada})

# Vista para cargar una portada
@login_required
def cargar_portada(request):
    if request.method == 'POST':
        form = PortadaForm(request.POST, request.FILES)
        if form.is_valid():
            Portada.objects.all().delete()  # Eliminar portadas existentes si es necesario
            form.save()
            messages.success(request, "Portada cargada exitosamente.")
            return redirect("inicio")
    else:
        form = PortadaForm()
    return render(request, 'pedidos/cargar_portada.html', {'form': form})

# Vista para el login
def login_view(request):
    if request.method == "POST":
        username = request.POST.get("username")
        password = request.POST.get("password")
        user = authenticate(request, username=username, password=password)
        if user is not None:
            login(request, user)
            return redirect("inicio")  # Redirige a la p√°gina de inicio
        else:
            messages.error(request, "Usuario o contrase√±a incorrectos.")
    return render(request, "pedidos/login.html")

# Vista para el logout
@login_required
def logout_view(request):
    logout(request)
    return redirect("login")

# # Vista para crear una empresa
@login_required
def crear_empresa(request):
    if request.method == 'POST':
        nombre = request.POST.get('nombre')
        direccion = request.POST.get('direccion')
        telefono = request.POST.get('telefono')
        item_empresa = request.POST.get('item_empresa')

        Empresa.objects.create(
            nombre=nombre,
            direccion=direccion,
            telefono=telefono,
            item_empresa=item_empresa
        )
        messages.success(request, "Empresa creada exitosamente.")
        return redirect('ver_empresas')

    return render(request, 'pedidos/crear_empresa.html')

@login_required
def crear_user_sist(request):
    if request.method == 'POST':
        form = UserSistemForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('ver_usuarios')
    else:
        form = UserSistemForm()
    return render(request, 'pedidos/crear_user_sist.html', {'form': form})

@login_required
def crear_cliente(request):
    if request.method == 'POST':
        form = ClienteForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect('ver_clientes')
    else:
        form = ClienteForm()
    return render(request, 'pedidos/crear_cliente.html', {'form': form})

def crear_producto(request):
    if request.method == 'POST':
        nombre = request.POST.get('nombre')
        marca = request.POST.get('marca')
        descripcion = request.POST.get('descripcion')
        valor_unitario = request.POST.get('valor_unitario')
        fecha_vencimiento = request.POST.get('fecha_vencimiento')
        item_producto = request.POST.get('item_producto')
        UM = request.POST.get('UM')  # Captura el valor del campo UM
        empresa_id = request.POST.get('item_empresa')  # Captura el ID de la empresa seleccionada
        
        # Busca la empresa en base al item_empresa proporcionado
        empresa = Empresa.objects.get(id=empresa_id)

        # Crea el producto con el valor de UM y la empresa asociada
        Producto.objects.create(
            empresa=empresa,  # Asigna la instancia de Empresa aqu√≠
            nombre=nombre,
            marca=marca,
            descripcion=descripcion,
            valor_unitario=valor_unitario,
            fecha_vencimiento=fecha_vencimiento,
            item_producto=item_producto,
            UM=UM  # Guarda el valor de UM
        )
        
        return render(request, 'pedidos/crear_producto.html')

    productos = Producto.objects.all()
    empresas = Empresa.objects.all()
    return render(request, 'pedidos/crear_producto.html', {
        'productos': productos,
        'empresas': empresas})

@login_required
def crear_pedido(request):
    productos_solicitados = request.session.get('productos_solicitados', [])
    total_pedido = sum(producto['val_producto'] for producto in productos_solicitados)

    if request.method == 'POST':
        if 'limpiar_productos' in request.POST:
            request.session['productos_solicitados'] = []
            messages.success(request, "Productos solicitados eliminados correctamente.")
            return redirect('crear_pedido')

        if 'eliminar_productos_seleccionados' in request.POST:
            # Recibir los √≠ndices de las filas seleccionadas para eliminar
            indices_a_eliminar = request.POST.getlist('eliminar_fila')
            if indices_a_eliminar:
                # Convertir los √≠ndices a enteros y eliminar en orden inverso para evitar problemas
                indices_a_eliminar = sorted([int(i) for i in indices_a_eliminar], reverse=True)
                for index in indices_a_eliminar:
                    if 0 <= index < len(productos_solicitados):
                        productos_solicitados.pop(index)
                request.session['productos_solicitados'] = productos_solicitados
                messages.success(request, "Productos seleccionados eliminados correctamente.")
            
            # Recalcular el total despu√©s de la eliminaci√≥n
            total_pedido = sum(producto['val_producto'] for producto in productos_solicitados)

        elif 'agregar_producto' in request.POST:
            item_empresa = request.POST.get('item_empresa')
            producto_id = request.POST.get('producto')
            cantidad = int(request.POST.get('cantidad', 1))
            estatus_pedido = request.POST.get('EstatusPed')

            if producto_id and cantidad > 0:
                producto = get_object_or_404(Producto, id=producto_id)
                val_producto = float(producto.valor_unitario) * cantidad
                nro_pedido = request.session.get('nro_pedido', 1)
                item_pedido = len(productos_solicitados) + 1

                empresa = get_object_or_404(Empresa, id=item_empresa)

                productos_solicitados.append({
                    'id': producto.id,
                    'nro_pedido': nro_pedido,
                    'item_empresa': item_empresa,
                    'item_pedido': item_pedido,
                    'nombre': producto.nombre,
                    'marca': producto.marca,
                    'descripcion': producto.descripcion,
                    'UM': producto.UM,
                    'valor_unitario': float(producto.valor_unitario),
                    'cantidad': cantidad,
                    'val_producto': val_producto,
                    'fecha_pedido': datetime.now().strftime('%Y-%m-%d'),
                    'EstatusPed': estatus_pedido
                })
                request.session['productos_solicitados'] = productos_solicitados
                messages.success(request, "Producto agregado a la lista.")

            total_pedido = sum(producto['val_producto'] for producto in productos_solicitados)

        elif 'guardar_pedido' in request.POST:
            cliente_id = request.POST.get('cliente')
            estatus_pedido = request.POST.get('EstatusPed')
            fecha_pedido = timezone.now().strftime('%Y-%m-%d')

            if cliente_id and productos_solicitados:
                cliente = get_object_or_404(Cliente, id=cliente_id)

                for producto_data in productos_solicitados:
                    producto = get_object_or_404(Producto, id=producto_data['id'])
                    
                    ultimo_pedido = Pedido.objects.filter(nro_pedido=producto_data['nro_pedido']).order_by('-item_pedido').first()
                    item_pedido = (ultimo_pedido.item_pedido + 1) if ultimo_pedido else 1
 
                    Pedido.objects.create(
                        item_empresa=producto_data['item_empresa'],
                        nro_pedido=producto_data['nro_pedido'],
                        cliente=cliente,
                        producto=producto,
                        EstatusPed=estatus_pedido,
                        cantidad=producto_data['cantidad'],
                        fecha_pedido=fecha_pedido,
                        item_pedido=item_pedido
                    )

                request.session['productos_solicitados'] = []
                messages.success(request, "Pedido guardado correctamente.")
                return redirect('inicio')
    
    # Obtener todos los productos y clientes para mostrarlos en el formulario
    productos = Producto.objects.all()
    clientes = Cliente.objects.all()
    cliente_id = request.POST.get('cliente') if request.method == 'POST' else None
    cliente = get_object_or_404(Cliente, id=cliente_id) if cliente_id else None

    return render(request, 'pedidos/crear_pedido.html', {
        'productos': productos,
        'clientes': clientes,
        'productos_solicitados': productos_solicitados,
        'total_pedido': total_pedido,
        'cliente_seleccionado': cliente
    })

# Vistas para listar entidades
@login_required
def ver_empresas(request):
    empresas = Empresa.objects.all()
    return render(request, 'pedidos/ver_empresas.html', {'empresas': empresas})

@login_required
def ver_usuarios(request):
    usuarios = UserSistem.objects.all()
    return render(request, 'pedidos/ver_usuarios.html', {'usuarios': usuarios})

@login_required
def ver_clientes(request):
    clientes = Cliente.objects.all()
    return render(request, 'pedidos/ver_clientes.html', {'clientes': clientes})

@login_required
def ver_productos(request):
    productos = Producto.objects.all()
    return render(request, 'pedidos/ver_productos.html', {'productos': productos})

@login_required
def ver_pedidos(request):
    pedidos = Pedido.objects.all()
    return render(request, 'pedidos/ver_pedidos.html', {'pedidos': pedidos})

# Vista para enviar mensajes
@login_required
def enviar_mensajes(request):
    enlaces = []
    if request.method == 'POST':
        mensaje = request.POST.get('mensaje')
        clientes_ids = request.POST.getlist('clientes')
        clientes = Cliente.objects.filter(id__in=clientes_ids)

        for cliente in clientes:
            if cliente.whatsapp:
                enlace = f"https://wa.me/{cliente.whatsapp}?text={mensaje}"
                enlaces.append(enlace)

    clientes = Cliente.objects.all()
    return render(request, 'pedidos/enviar_mensajes.html', {
        'clientes': clientes,
        'enlaces': enlaces
    })

# Vista para la ubicaci√≥n de clientes en Google Maps
@login_required
def ubicacion_clientes(request):
    pedidos = Pedido.objects.select_related('cliente', 'producto').all()
    clientes_data = []

    for pedido in pedidos:
        clientes_data.append({
            'nombre': f"{pedido.cliente.nombre} {pedido.cliente.apellido}",
            'coordenadas': pedido.cliente.coordenadas,
            'pedido_info': f"Pedido ID: {pedido.id}, Producto: {pedido.producto.nombre}, Cantidad: {pedido.cantidad}",
            'estatus_pedido': pedido.EstatusPed
        })

    context = {
        'clientes_json': json.dumps(clientes_data),
        'google_maps_api_key': settings.GOOGLE_MAPS_API_KEY
    }
    return render(request, 'pedidos/ubicacion_clientes.html', context)

@login_required
def productos(request):
    return render(request, 'pedidos/productos.html')

# Vistas para editar y eliminar productos en un pedido
@login_required
def editar_producto(request, nro_pedido, item_pedido):
    producto = Pedido.objects.get(nro_pedido=nro_pedido, item_pedido=item_pedido)
    if request.method == 'POST':
        producto.cantidad = request.POST.get('cantidad')
        producto.save()
        return redirect('crear_pedido')

    return render(request, 'pedidos/editar_producto.html', {'producto': producto})

@login_required
def eliminar_producto(request):
    if request.method == 'POST':
        productos_a_eliminar = request.POST.getlist('eliminar[]')
        Producto.objects.filter(id__in=productos_a_eliminar).delete()
    return redirect('ver_productos')

@login_required
def eliminar_empresas(request):
    if request.method == 'POST':
        empresas_a_eliminar = request.POST.getlist('empresas_a_eliminar')
        Empresa.objects.filter(id__in=empresas_a_eliminar).delete()
        messages.success(request, "Empresas seleccionadas eliminadas exitosamente.")
    return redirect('ver_empresas')

>PROYECTO		
	>sistema_pedidos	
		_init_.py
import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sistema_pedidos.settings')

application = get_asgi_application()


>PROYECTO		
	>sistema_pedidos	
		settings.py
settings.py
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&o85ww_e0&b*i7%v(ca+_twwn)^1@42&-0rowc(!!68ou-^yt='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# CLAVE API GOOGLE MAPS
GOOGLE_MAPS_API_KEY = 'AIzaSyDEQafZcWfu0PjK-5uHQg6eHPW8FkdF50Y'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pedidos',
    'rest_framework'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sistema_pedidos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sistema_pedidos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bda_ped',
        'USER': 'root',
        'PASSWORD': '12345',
        'HOST': 'localhost',  # Cambia si usas un host remoto
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

>PROYECTO		
	>sistema_pedidos
		urls.py
urls.py
# sistema_pedidos/urls.py
from django.contrib import admin
from django.urls import path, include
from django.shortcuts import redirect
from pedidos import views 

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', lambda request: redirect('login')),  # Redirige la ra√≠z al login o al inicio
    path('inicio/', include('pedidos.urls')),  # Incluye las URLs de la app `pedidos`
    path('productos/', views.productos, name='productos'), # Incluye las URLs de la app `productos`
]

>PROYECTO		
	>sistema_pedidos
		wsgi.py
wsgi.py
"""
WSGI config for sistema_pedidos project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'sistema_pedidos.settings')

application = get_wsgi_application()


Y ESTA ES LA ESTRUCTURA DE LA BASE DE DATOS bda_ped


